
==================== FINAL INTERFACE ====================
2017-10-27 00:57:30.167031 UTC

interface main@main:Main 8002
  interface hash: 7a226dbb0a20e53be05316ec2677ce57
  ABI hash: f1b32eafaf4461adb807c64bb8c5e2cf
  export-list hash: 636dfc08d76b7e71c1f6968c77fe036e
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 75de5e6bb661f6aa9e53de7e958ba42e
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.addClient
  Main.broadcastMessage
  Main.buildClient
  Main.fetchChatroom
  Main.getClients
  Main.handleMessage
  Main.main
  Main.newChatroom
  Main.newClient
  Main.removeClient
  Main.runClient
  Main.sendMessage
  Main.Chatroom{Main.Chatroom clients roomName roomRef}
  Main.Chatrooms
  Main.Client{Main.Client clientChan clientHdl clientID clientName}
  Main.Message{Main.Broadcast Main.Command Main.Error Main.Response}
module dependencies:
package dependencies: array-0.5.1.1@array-0.5.1.1
                      async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj base-4.9.1.0
                      binary-0.8.3.0@binary-0.8.3.0
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1
                      deepseq-1.4.2.0@deepseq-1.4.2.0 ghc-prim-0.5.0.0
                      hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol
                      integer-gmp-1.0.0.1
                      network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz
                      split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT
                      stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve
                      text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         binary-0.8.3.0@binary-0.8.3.0:Data.Binary.Generic
         bytestring-0.10.8.1@bytestring-0.10.8.1:Data.ByteString.Builder
         hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Generic
         network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket
         stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Monad.STM
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Show
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Compose base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.Functor.Product base-4.9.1.0:Data.Functor.Sum
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntMap.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.IntSet.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
                         containers-0.5.7.1@containers-0.5.7.1:Data.Set.Base
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text
                         text-1.2.2.2@text-1.2.2.2-9UQZjEJZQFSGMffj1Z5g00:Data.Text.Lazy
import  -/  async-2.1.1.1@async-2.1.1.1-8yywY4inVGRLJSCg60gBXj:Control.Concurrent.Async ea0392541014747b7209d5d4a7804b6a
import  -/  base-4.9.1.0:Control.Concurrent 2ee6a0a58489520b9a96d8fef10380fa
import  -/  base-4.9.1.0:Control.Monad a6784c5dab0d75c63dabec5a37843f98
import  -/  base-4.9.1.0:Data.Char 01433d23661edb6e5ef1536ef1e6774c
import  -/  base-4.9.1.0:Data.Foldable 3e0b6967a1da89945d0e2d47266337a2
import  -/  base-4.9.1.0:Data.Maybe d876c4ffe4b3c43755a781e8ad860d88
import  -/  base-4.9.1.0:Data.OldList 27987919d8da2f92e3f472ca81f730f8
import  -/  base-4.9.1.0:Data.Tuple 7dc4bbb45d2e69c991ffac438beeca11
import  -/  base-4.9.1.0:GHC.Base c4231c43c07e46080a26bf94094c7aa1
import  -/  base-4.9.1.0:GHC.Conc.Sync 8d0a228e5fc4d8c110495066f4d52ea1
import  -/  base-4.9.1.0:GHC.IO.Handle ba98a5b34d78cbf48b41fe58a3735c69
import  -/  base-4.9.1.0:GHC.IO.Handle.Text b65719f3b262b071ab1aabeb72fc9d8b
import  -/  base-4.9.1.0:GHC.IO.Handle.Types 17aa0e2ab137800e3a31992d780c071f
import  -/  base-4.9.1.0:GHC.IO.IOMode 2f5782f93b12a0d860d6d661b9fb405c
import  -/  base-4.9.1.0:GHC.List ab8c4e523e6c479c549d3bcd5fc4a439
import  -/  base-4.9.1.0:GHC.Num 00bfaa7b2f9d6084913c0697a8a49ec8
import  -/  base-4.9.1.0:GHC.Show a027f5ac24879eaba752f44aa90fe511
import  -/  base-4.9.1.0:Prelude 22dd289b8469a8fa8dc81cab7b237771
import  -/  base-4.9.1.0:System.Environment 08cb808e8e6a7821e6f8cfa76a977431
import  -/  base-4.9.1.0:System.Exit 068ba078eb20417d7af66db8b8ab4db1
import  -/  base-4.9.1.0:System.IO c9de64c5f5407c4cf1c52500c4d15200
import  -/  base-4.9.1.0:Text.Read 75c59863e882ebaec4532e9465e2ee9b
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map 0fd5c8559af8bc4b6f38b9cf9ba5a467
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Map.Base 8b155a212edaca6c85bcefe65a8bc505
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable 0e86f32bd46d4c618b1e312455011c77
import  -/  hashable-1.2.6.1@hashable-1.2.6.1-2ZLNuHq395GGIHwEHuqZol:Data.Hashable.Class bc4f00f60e55accb5753c8e0ce3cde5f
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket 52f9b9614bf018ecf5fec5f2570dad23
import  -/  network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz:Network.Socket.Types 2eb8a83dc42cc86a12e652ce3294cbda
import  -/  split-0.2.3.2@split-0.2.3.2-CJl40zTyCIV16Pr60nb7CT:Data.List.Split 272c5cfa667e04d85d90f02a3d135474
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM 3662559905a40ae5adbc3e935ac706c8
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TChan 791cd378857d88a7ed4d753121139423
import  -/  stm-2.4.4.1@stm-2.4.4.1-JQn4hNPyYjP5m9AcbI88Ve:Control.Concurrent.STM.TVar 8271fdeaf6f41f205dbe31243cf91390
e340880254671be1efe20ff4543aac03
  $slookup1 ::
    GHC.Types.Int
    -> Data.Map.Base.Map GHC.Types.Int a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,1*U(U)><S,1*U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Types.Int)
                   (w1 :: Data.Map.Base.Map GHC.Types.Int a) ->
                 case w of ww { GHC.Types.I# ww1 ->
                 Main.$wpoly_go10 @ a ww1 w1 }) -}
6210aa73a4bb794a27ad3ad0105b5910
  $tc'Broadcast :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3142049783279842247##
                   10598622670723664079##
                   Main.$trModule
                   Main.$tc'Broadcast1) -}
99f3455298ef37c6bc51a517745ed47c
  $tc'Broadcast1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Broadcast"#) -}
e6b2067888617f9198ceed4027d11ad3
  $tc'Chatroom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   17087822669908215985##
                   562869871650124454##
                   Main.$trModule
                   Main.$tc'Chatroom1) -}
debd9fb9c0c1d15e880f7bda7c6dec66
  $tc'Chatroom1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Chatroom"#) -}
e62d791731323355b04c005ddd44e49e
  $tc'Client :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14317905627767584460##
                   8020356174247805466##
                   Main.$trModule
                   Main.$tc'Client1) -}
1e31cdcbef3d5a45efde6decabdcaefc
  $tc'Client1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Client"#) -}
71a1d0da8ac90eb52db4e0337dee0105
  $tc'Command :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14407055736893994245##
                   9773285697625515779##
                   Main.$trModule
                   Main.$tc'Command1) -}
df8b35970719712831612cdf74ffb012
  $tc'Command1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Command"#) -}
bb3701615f7fd44941c955478de40d3a
  $tc'Error :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   5410245351366267134##
                   2651837835589787724##
                   Main.$trModule
                   Main.$tc'Error1) -}
86c765bc65e9d09b9d8d79559a63ce9d
  $tc'Error1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Error"#) -}
f68044225c63b3d839cd13514d08ac89
  $tc'Response :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   16235863979002411904##
                   9932101487309102346##
                   Main.$trModule
                   Main.$tc'Response1) -}
e347f368e3e67adbdf283955b7ba2691
  $tc'Response1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Response"#) -}
e82f775f3735c5d968e088499db2465e
  $tcChatroom :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   9706153233630221117##
                   1865358357504204911##
                   Main.$trModule
                   Main.$tcChatroom1) -}
537933bca6f75e29999f47a72ba4594d
  $tcChatroom1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Chatroom"#) -}
824c8b6e5d1e111a64ffa02e17dfa0f0
  $tcClient :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   2041806266336690928##
                   6211083142683335045##
                   Main.$trModule
                   Main.$tcClient1) -}
f6308ac30128598c150371405caec582
  $tcClient1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Client"#) -}
a317a2b68abab7bca30880bdf39d36dc
  $tcMessage :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   11750200497582023075##
                   1107912994446066806##
                   Main.$trModule
                   Main.$tcMessage1) -}
9d158e0a5fe47b777c8610b9e6ae8f21
  $tcMessage1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Message"#) -}
d6831ef04cb9301b090dfae6f7bb7ec7
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Main.$trModule2 Main.$trModule1) -}
847d9fc3b8e6f0b424199f36b4999bb2
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Main"#) -}
24ef6042833e75ffd7aa98b83ecca98d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "main"#) -}
9a052e776d9ba13d6eb6d3875b088761
  $w$sgo1 ::
    GHC.Prim.Int#
    -> a1
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 3, Strictness: <L,U><L,U><S,1*U>, Inline: [0] -}
30b69a2add2fa838a419cc059f94c040
  $w$sgo10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a1
    -> Data.Map.Base.Map GHC.Types.Int a1
  {- Arity: 2, Strictness: <L,U><S,1*U>, Inline: [0] -}
9242f156a9812936085f0db8eae5e2d5
  $waddClient ::
    GHC.Base.String
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Control.Concurrent.STM.TChan.TVarList Main.Message)
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Control.Concurrent.STM.TChan.TVarList Main.Message)
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Main.Chatroom)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 8,
     Strictness: <L,U><L,U><S,U><L,U><L,U(U)><S,U><S,U><S,U>,
     Inline: [0] -}
ecb719e178f47807d4b3c386ba2bc65d
  $wbroadcastMessage ::
    Main.Message
    -> Main.Client
    -> GHC.Prim.Int#
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Main.Chatroom)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U><L,1*U(A,1*U(A,U),A,A)><L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Main.Message)
                   (w1 :: Main.Client)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.TVar#
                             GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Main.Chatroom))
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ (GHC.Base.Maybe Main.Chatroom)
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Types.Int Main.Chatroom)
                                ww1
                                s of ds1 { (#,#) ipv ipv1 ->
                         case Main.$wpoly_go10 @ Main.Chatroom ww ipv1 of wild {
                           GHC.Base.Nothing -> (# ipv, GHC.Base.Nothing @ Main.Chatroom #)
                           GHC.Base.Just c -> (# ipv, wild #) } })
                        w2 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.Prim.atomically#
                        @ ()
                        (\ (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case w1 of ww2 { Main.Client ww3 ww4 ww5 ww6 ->
                         case ww4 of ww7 { Control.Concurrent.STM.TChan.TChan ww8 ww9 ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                                ww9
                                w3 of ds2 { (#,#) ipv2 ipv3 ->
                         case GHC.Prim.newTVar#
                                @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                @ GHC.Prim.RealWorld
                                (Control.Concurrent.STM.TChan.TNil @ Main.Message)
                                ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                         case ipv3 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                tvar#
                                (Control.Concurrent.STM.TChan.TCons
                                   @ Main.Message
                                   Main.broadcastMessage3
                                   ipv5)
                                ipv4 of s2# { DEFAULT ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                                ww9
                                (GHC.Conc.Sync.TVar
                                   @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                   ipv5)
                                s2# of s2#1 { DEFAULT ->
                         (# s2#1, GHC.Tuple.() #) } } } } } } })
                        ipv
                   GHC.Base.Just room
                   -> GHC.Prim.atomically#
                        @ ()
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case room of wild1 { Main.Chatroom ds ds2 ds3 ->
                         case ds3 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                                tvar#
                                s of ds4 { (#,#) ipv2 ipv3 ->
                         letrec {
                           go10 :: GHC.Conc.Sync.STM ()
                                   -> Data.Map.Base.Map GHC.Types.Int Main.Client
                                   -> GHC.Prim.State# GHC.Prim.RealWorld
                                   -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
                             {- Arity: 3, Strictness: <C(S),1*C1(U(U,U))><S,1*U><S,U> -}
                           = \ (z' :: GHC.Conc.Sync.STM ())
                               (ds5 :: Data.Map.Base.Map GHC.Types.Int Main.Client)
                               (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                             case ds5 of wild3 {
                               Data.Map.Base.Bin dt kx x l r
                               -> go10
                                    (\ (eta1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                                     case x of wild4 { Main.Client ds6 ds7 ds8 ds9 ->
                                     case ds7 of wild5 { Control.Concurrent.STM.TChan.TChan dt1 dt2 ->
                                     case GHC.Prim.readTVar#
                                            @ GHC.Prim.RealWorld
                                            @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                                            dt2
                                            eta1 of ds10 { (#,#) ipv4 ipv5 ->
                                     case GHC.Prim.newTVar#
                                            @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                            @ GHC.Prim.RealWorld
                                            (Control.Concurrent.STM.TChan.TNil @ Main.Message)
                                            ipv4 of ds11 { (#,#) ipv6 ipv7 ->
                                     case ipv5 of wild6 { GHC.Conc.Sync.TVar tvar#1 ->
                                     case GHC.Prim.writeTVar#
                                            @ GHC.Prim.RealWorld
                                            @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                            tvar#1
                                            (Control.Concurrent.STM.TChan.TCons
                                               @ Main.Message
                                               w
                                               ipv7)
                                            ipv6 of s2# { DEFAULT ->
                                     case GHC.Prim.writeTVar#
                                            @ GHC.Prim.RealWorld
                                            @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                                            dt2
                                            (GHC.Conc.Sync.TVar
                                               @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                               ipv7)
                                            s2# of s2#1 { DEFAULT ->
                                     go10 z' r s2#1 } } } } } } })
                                      `cast`
                                    (Sym (GHC.Conc.Sync.N:STM[0] <()>_R))
                                    l
                                    eta
                               Data.Map.Base.Tip
                               -> z' `cast` (GHC.Conc.Sync.N:STM[0] <()>_R) eta }
                         } in
                         go10
                           Main.broadcastMessage2 `cast` (Sym (GHC.Conc.Sync.N:STM[0] <()>_R))
                           ipv3
                           ipv2 } } })
                        ipv } }) -}
46d4c2c412a3554824666b3a83795410
  $wbuildClient ::
    Main.Chatrooms
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> Network.Socket.HostName
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 6, Strictness: <L,U(U)><L,U(U)><S,U><L,U><L,U><S,U>,
     Inline: [0] -}
625d8f6045ea9a80c94f6a20502b760a
  $wgetClients ::
    Main.Chatrooms
    -> Foreign.C.Types.CInt
    -> Network.Socket.Types.Family
    -> Network.Socket.Types.SocketType
    -> Network.Socket.Types.ProtocolNumber
    -> GHC.Prim.MVar#
         GHC.Prim.RealWorld Network.Socket.Types.SocketStatus
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 9,
     Strictness: <L,U(U)><L,U(U)><S,U><L,U><L,U(U)><S,U><L,U(U)><L,U><S,U>,
     Inline: [0] -}
1aa95f8ee768cb4214a0a8415a890726
  $wpoly_go10 ::
    GHC.Prim.Int#
    -> Data.Map.Base.Map GHC.Types.Int a -> GHC.Base.Maybe a
  {- Arity: 2, HasNoCafRefs, Strictness: <L,U><S,1*U>, Inline: [0] -}
07aa738fd2a636f60f64115f17754e98
  $wremoveClient ::
    Main.Client
    -> GHC.Prim.Int#
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Main.Chatroom)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4, Strictness: <L,U(A,1*U(A,U),A,U(U))><L,U><S,U><S,U>,
     Inline: [0],
     Unfolding: (\ (w :: Main.Client)
                   (ww :: GHC.Prim.Int#)
                   (ww1 :: GHC.Prim.TVar#
                             GHC.Prim.RealWorld (Data.Map.Base.Map GHC.Types.Int Main.Chatroom))
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.atomically#
                        @ (GHC.Base.Maybe Main.Chatroom)
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Types.Int Main.Chatroom)
                                ww1
                                s of ds1 { (#,#) ipv ipv1 ->
                         case Main.$wpoly_go10 @ Main.Chatroom ww ipv1 of wild {
                           GHC.Base.Nothing -> (# ipv, GHC.Base.Nothing @ Main.Chatroom #)
                           GHC.Base.Just c -> (# ipv, wild #) } })
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild {
                   GHC.Base.Nothing
                   -> GHC.Prim.atomically# @ GHC.Types.Bool Main.removeClient2 ipv
                   GHC.Base.Just room
                   -> GHC.Prim.atomically#
                        @ GHC.Types.Bool
                        (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                         case room of wild1 { Main.Chatroom ds ds2 ds3 ->
                         case ds3 of wild2 { GHC.Conc.Sync.TVar tvar# ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                                tvar#
                                s of ds4 { (#,#) ipv2 ipv3 ->
                         case w of wild3 { Main.Client ds5 ds6 ds7 ds8 ->
                         case ds8 of ww2 { GHC.Types.I# ww3 ->
                         case Main.$w$sgo10 @ Main.Client ww3 ipv3 of vx { DEFAULT ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                                tvar#
                                vx
                                ipv2 of s2# { DEFAULT ->
                         case ds6 of wild4 { Control.Concurrent.STM.TChan.TChan dt dt1 ->
                         case GHC.Prim.readTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                                dt1
                                s2# of ds9 { (#,#) ipv4 ipv5 ->
                         case GHC.Prim.newTVar#
                                @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                @ GHC.Prim.RealWorld
                                (Control.Concurrent.STM.TChan.TNil @ Main.Message)
                                ipv4 of ds10 { (#,#) ipv6 ipv7 ->
                         case ipv5 of wild5 { GHC.Conc.Sync.TVar tvar#1 ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                tvar#1
                                (Control.Concurrent.STM.TChan.TCons
                                   @ Main.Message
                                   (Main.Response
                                      (GHC.CString.unpackAppendCString#
                                         "LEFT_CHATROOM:"#
                                         (case GHC.Show.$wshowSignedInt
                                                 0#
                                                 ww
                                                 (GHC.Types.[]
                                                    @ GHC.Types.Char) of ww4 { (#,#) ww5 ww6 ->
                                          GHC.Base.++
                                            @ GHC.Types.Char
                                            (GHC.Types.: @ GHC.Types.Char ww5 ww6)
                                            (GHC.CString.unpackAppendCString#
                                               "\n\
                                               \JOIN_ID:"#
                                               (case GHC.Show.$wshowSignedInt
                                                       0#
                                                       ww3
                                                       (GHC.Types.[]
                                                          @ GHC.Types.Char) of ww7 { (#,#) ww8 ww9 ->
                                                GHC.Types.: @ GHC.Types.Char ww8 ww9 })) })))
                                   ipv7)
                                ipv6 of s2#1 { DEFAULT ->
                         case GHC.Prim.writeTVar#
                                @ GHC.Prim.RealWorld
                                @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                                dt1
                                (GHC.Conc.Sync.TVar
                                   @ (Control.Concurrent.STM.TChan.TList Main.Message)
                                   ipv7)
                                s2#1 of s2#2 { DEFAULT ->
                         (# s2#2, GHC.Types.True #) } } } } } } } } } } } } })
                        ipv } }) -}
9e5e33b80834f4a35dca7abd8b74ede4
  $wsendMessage ::
    GHC.Prim.TVar#
      GHC.Prim.RealWorld
      (Control.Concurrent.STM.TChan.TVarList Main.Message)
    -> GHC.Prim.TVar#
         GHC.Prim.RealWorld
         (Control.Concurrent.STM.TChan.TVarList Main.Message)
    -> Main.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,A><S,U><L,U><S,U>,
     Inline: [0],
     Unfolding: (\ (ww :: GHC.Prim.TVar#
                            GHC.Prim.RealWorld
                            (Control.Concurrent.STM.TChan.TVarList Main.Message))
                   (ww1 :: GHC.Prim.TVar#
                             GHC.Prim.RealWorld
                             (Control.Concurrent.STM.TChan.TVarList Main.Message))
                   (w :: Main.Message)
                   (w1 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.readTVar#
                        @ GHC.Prim.RealWorld
                        @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                        ww1
                        w1 of ds1 { (#,#) ipv ipv1 ->
                 case GHC.Prim.newTVar#
                        @ (Control.Concurrent.STM.TChan.TList Main.Message)
                        @ GHC.Prim.RealWorld
                        (Control.Concurrent.STM.TChan.TNil @ Main.Message)
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case ipv1 of wild1 { GHC.Conc.Sync.TVar tvar# ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ (Control.Concurrent.STM.TChan.TList Main.Message)
                        tvar#
                        (Control.Concurrent.STM.TChan.TCons @ Main.Message w ipv3)
                        ipv2 of s2# { DEFAULT ->
                 case GHC.Prim.writeTVar#
                        @ GHC.Prim.RealWorld
                        @ (Control.Concurrent.STM.TChan.TVarList Main.Message)
                        ww1
                        (GHC.Conc.Sync.TVar
                           @ (Control.Concurrent.STM.TChan.TList Main.Message)
                           ipv3)
                        s2# of s2#1 { DEFAULT ->
                 (# s2#1, GHC.Tuple.() #) } } } } }) -}
d05c270ea888279198d4a6dd34d46c75
  data Chatroom
    = Chatroom {roomName :: GHC.Base.String,
                roomRef :: GHC.Types.Int,
                clients :: GHC.Conc.Sync.TVar
                             (Data.Map.Base.Map GHC.Types.Int Main.Client)}
54537d5487f8b25f587a6f4caa9f40f6
  type Chatrooms =
    GHC.Conc.Sync.TVar (Data.Map.Base.Map GHC.Types.Int Main.Chatroom)
cf2f674e20f4fd9ab963908095fa4ea9
  data Client
    = Client {clientName :: GHC.Base.String,
              clientChan :: Control.Concurrent.STM.TChan.TChan Main.Message,
              clientHdl :: GHC.IO.Handle.Types.Handle,
              clientID :: GHC.Types.Int}
2fc7a504c0791b470b24a1de22099c53
  data Message
    = Command [[GHC.Base.String]] GHC.Base.String
    | Error GHC.Base.String GHC.Base.String
    | Broadcast GHC.Base.String GHC.Base.String GHC.Base.String
    | Response GHC.Base.String
3df9c23f8dc0d9a899ee0bd3535d14fc
  addClient ::
    Main.Client -> GHC.Base.String -> Main.Chatrooms -> GHC.Types.IO ()
  {- Arity: 4,
     Strictness: <S(LS(LS)LL),U(U,U(U,U),U,U(U))><S,U><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.addClient1
                  `cast`
                (<Main.Client>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <Main.Chatrooms>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
0e6b4bc38d405d32d59a222c49132a79
  addClient1 ::
    Main.Client
    -> GHC.Base.String
    -> Main.Chatrooms
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 4,
     Strictness: <S(LS(LS)LL),U(U,U(U,U),U,U(U))><S,U><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Main.Client)
                   (w1 :: GHC.Base.String)
                   (w2 :: Main.Chatrooms)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Main.Client ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { Control.Concurrent.STM.TChan.TChan ww6 ww7 ->
                 case w2 of ww8 { GHC.Conc.Sync.TVar ww9 ->
                 Main.$waddClient ww1 ww6 ww7 ww3 ww4 w1 ww9 w3 } } }) -}
42c7165079568b212fab23d34965076f
  broadcastMessage ::
    Main.Message
    -> Main.Client
    -> GHC.Types.Int
    -> Main.Chatrooms
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U><L,1*U(A,1*U(A,U),A,A)><S,1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.broadcastMessage1
                  `cast`
                (<Main.Message>_R
                 ->_R <Main.Client>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Main.Chatrooms>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
832741b661657d878ac4a4529f6077d5
  broadcastMessage1 ::
    Main.Message
    -> Main.Client
    -> GHC.Types.Int
    -> Main.Chatrooms
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U><L,1*U(A,1*U(A,U),A,A)><S,1*U(U)><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Main.Message)
                   (w1 :: Main.Client)
                   (w2 :: GHC.Types.Int)
                   (w3 :: Main.Chatrooms)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w2 of ww { GHC.Types.I# ww1 ->
                 case w3 of ww2 { GHC.Conc.Sync.TVar ww3 ->
                 Main.$wbroadcastMessage w w1 ww1 ww3 w4 } }) -}
fa33baf090d7cb2faf872b9abccd000b
  broadcastMessage2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, GHC.Tuple.() #)) -}
ac2ba7c9d427b39029135691c9c2cc52
  broadcastMessage3 :: Main.Message
  {- Strictness: m2,
     Unfolding: (Main.Error
                   Main.broadcastMessage5
                   Main.broadcastMessage4) -}
ce69174393eb4171da5a01175fd4f78e
  broadcastMessage4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "This chatroom does not exist"#) -}
4c69f3d48df2fdfc919066ecb818eaae
  broadcastMessage5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "200"#) -}
3fbfe64b33bb91aed49ad09bcc030d30
  buildClient ::
    Main.Chatrooms
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> (Network.Socket.HostName, GHC.Base.String)
    -> GHC.Types.IO ()
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,U><S,1*U(U,U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.buildClient1
                  `cast`
                (<Main.Chatrooms>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.IO.Handle.Types.Handle>_R
                 ->_R <(Network.Socket.HostName, GHC.Base.String)>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
6bb0a1b803a942c77e27a1da192f865e
  buildClient1 ::
    Main.Chatrooms
    -> GHC.Types.Int
    -> GHC.IO.Handle.Types.Handle
    -> (Network.Socket.HostName, GHC.Base.String)
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,U><S,1*U(U,U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Main.Chatrooms)
                   (w1 :: GHC.Types.Int)
                   (w2 :: GHC.IO.Handle.Types.Handle)
                   (w3 :: (Network.Socket.HostName, GHC.Base.String))
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w3 of ww { (,) ww1 ww2 ->
                 Main.$wbuildClient w w1 w2 ww1 ww2 w4 }) -}
5a469feb4e5c8c5763db80c1b58ba520
  clientChan ::
    Main.Client -> Control.Concurrent.STM.TChan.TChan Main.Message
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LSLL),1*U(A,1*U(U,U),A,A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 -> ds2 }) -}
4a6762812ebce8078e76be86d751bc1f
  clientHdl :: Main.Client -> GHC.IO.Handle.Types.Handle
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 -> ds3 }) -}
b7f4205b36f37135a52467e0f197cd21
  clientID :: Main.Client -> GHC.Types.Int
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(LLLS),1*U(A,A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 -> ds4 }) -}
e1ff25ace67853c72baa830fdc82aa74
  clientName :: Main.Client -> GHC.Base.String
  RecSel Left Main.Client
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Client) ->
                 case ds of wild { Main.Client ds1 ds2 ds3 ds4 -> ds1 }) -}
3996ddce791442965cff24e9d3ffefed
  clients ::
    Main.Chatroom
    -> GHC.Conc.Sync.TVar (Data.Map.Base.Map GHC.Types.Int Main.Client)
  RecSel Left Main.Chatroom
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U(U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Chatroom) ->
                 case ds of wild { Main.Chatroom ds1 ds2 ds3 -> ds3 }) -}
a70e4bde43d89d043aa148425fd97584
  fetchChatroom ::
    GHC.Types.Int
    -> Main.Chatrooms -> GHC.Types.IO (GHC.Base.Maybe Main.Chatroom)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.fetchChatroom1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <Main.Chatrooms>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Base.Maybe Main.Chatroom>_R)) -}
15737526acfbe5e78ed7222e6ded80a2
  fetchChatroom1 ::
    GHC.Types.Int
    -> Main.Chatrooms
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Base.Maybe Main.Chatroom #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S,1*U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (3, True, False)
                (\ (roomRef1 :: GHC.Types.Int)
                   (chatrooms :: Main.Chatrooms)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 GHC.Prim.atomically#
                   @ (GHC.Base.Maybe Main.Chatroom)
                   (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                    case chatrooms of wild { GHC.Conc.Sync.TVar tvar# ->
                    case GHC.Prim.readTVar#
                           @ GHC.Prim.RealWorld
                           @ (Data.Map.Base.Map GHC.Types.Int Main.Chatroom)
                           tvar#
                           s of ds1 { (#,#) ipv ipv1 ->
                    case Main.$slookup1 @ Main.Chatroom roomRef1 ipv1 of wild1 {
                      GHC.Base.Nothing -> (# ipv, GHC.Base.Nothing @ Main.Chatroom #)
                      GHC.Base.Just c
                      -> (# ipv, GHC.Base.Just @ Main.Chatroom c #) } } })
                   eta) -}
9c36cb2641daa19adb214c0fba1da03f
  getClients ::
    Main.Chatrooms
    -> Network.Socket.Types.Socket
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Types.IO ()
  {- Arity: 5,
     Strictness: <L,U(U)><S(LSLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.getClients1
                  `cast`
                (<Main.Chatrooms>_R
                 ->_R <Network.Socket.Types.Socket>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <GHC.Base.String>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
c0553a25ad62f673579a18acd269353b
  getClients1 ::
    Main.Chatrooms
    -> Network.Socket.Types.Socket
    -> GHC.Types.Int
    -> GHC.Base.String
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 5,
     Strictness: <L,U(U)><S(LSLLS(S)),1*U(U(U),U,U,U(U),U(U))><L,U(U)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (5, True, False)
                (\ (w :: Main.Chatrooms)
                   (w1 :: Network.Socket.Types.Socket)
                   (w2 :: GHC.Types.Int)
                   (w3 :: GHC.Base.String)
                   (w4 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 Main.$wgetClients w ww1 ww2 ww3 ww4 ww7 w2 w3 w4 } }) -}
e2874a9dc37c3745a9605ae8e4fbedeb
  handleMessage ::
    Main.Chatrooms
    -> Main.Client -> Main.Message -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(U)><L,U(U,U(U,U),U,U(U))><S,1*U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.handleMessage1
                  `cast`
                (<Main.Chatrooms>_R
                 ->_R <Main.Client>_R
                 ->_R <Main.Message>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
7c5594f631fdc3583056bcdac0614e8e
  handleMessage1 ::
    Main.Chatrooms
    -> Main.Client
    -> Main.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4,
     Strictness: <L,U(U)><L,U(U,U(U,U),U,U(U))><S,1*U><S,U> -}
b039dcbd9896a342fe48ab7bd35b2711
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
20247e91aea406025202a81f7a624e40
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Network.Socket.$wsocket
                        Network.Socket.Types.AF_INET
                        Network.Socket.Types.Stream
                        0#
                        s of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of ww { Network.Socket.Types.MkSocket ww1 ww2 ww3 ww4 ww5 ->
                 case Network.Socket.$wsetSocketOption
                        ww1
                        Network.Socket.ReuseAddr
                        Main.main6
                        ipv of ds2 { (#,#) ipv2 ipv3 ->
                 case System.Environment.getArgs1 ipv2 of ds3 { (#,#) ipv4 ipv5 ->
                 case ww5 of ww6 { GHC.MVar.MVar ww7 ->
                 case Network.Socket.$wbind
                        ww1
                        ww7
                        Main.main4
                        ipv4 of ds4 { (#,#) ipv6 ipv7 ->
                 case Network.Socket.$wlisten
                        ww1
                        ww7
                        Main.main3
                        ipv6 of ds5 { (#,#) ipv8 ipv9 ->
                 case GHC.Prim.atomically#
                        @ (GHC.Conc.Sync.TVar
                             (Data.Map.Base.Map GHC.Types.Int Main.Chatroom))
                        Main.main2
                        ipv8 of ds6 { (#,#) ipv10 ipv11 ->
                 let {
                   port :: GHC.Base.String
                   = case ipv5 of wild {
                       [] -> GHC.List.badHead @ GHC.Base.String : x ds7 -> x }
                 } in
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        (GHC.CString.unpackAppendCString#
                           "Server started... Listening on port: "#
                           port)
                        GHC.Types.True
                        ipv10 of ds7 { (#,#) ipv12 ipv13 ->
                 case Main.$wgetClients
                        ipv11
                        ww1
                        ww2
                        ww3
                        ww4
                        ww7
                        Main.main6
                        port
                        ipv12 of ds8 { (#,#) ipv14 ipv15 ->
                 (# ipv14, GHC.Tuple.() #) } } } } } } } } } }) -}
91551b0853947ddd4dfe443fd394b78b
  main2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          GHC.Conc.Sync.TVar
            (Data.Map.Base.Map GHC.Types.Int Main.Chatroom) #)
  {- Arity: 1, HasNoCafRefs,
     Unfolding: (\ (s1# :: GHC.Prim.State#
                             GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Types.Int Main.Chatroom)
                        @ GHC.Prim.RealWorld
                        (Data.Map.Base.Tip @ GHC.Types.Int @ Main.Chatroom)
                        s1# of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    GHC.Conc.Sync.TVar
                      @ (Data.Map.Base.Map GHC.Types.Int Main.Chatroom)
                      ipv1 #) }) -}
dd25b60ff45b656887167b14f0fc94bb
  main3 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 5#) -}
7142f1017b1708c1b062492732661ba9
  main4 :: Network.Socket.Types.SockAddr
  {- Unfolding: (Network.Socket.Types.SockAddrInet
                   Main.main5
                   Network.Socket.iNADDR_ANY) -}
40fb8f2524252b7afb866b73fed78b4a
  main5 :: Network.Socket.Types.PortNumber
  {- Unfolding: (case {__pkg_ccall network-2.6.3.2@network-2.6.3.2-IsLM4TXcLoRI0fmmBYVyQz htons GHC.Prim.Word#
                                                                                                -> GHC.Prim.State#
                                                                                                     GHC.Prim.RealWorld
                                                                                                -> (# GHC.Prim.State#
                                                                                                        GHC.Prim.RealWorld,
                                                                                                      GHC.Prim.Word# #)}
                        5555##
                        GHC.Prim.realWorld# of wild1 { (#,#) ds ds1 ->
                 (GHC.Word.W16# (GHC.Prim.narrow16Word# ds1))
                   `cast`
                 (Sym (Network.Socket.Types.N:PortNumber[0])) }) -}
1e5926b799ede3e39e77f50a7b1cca01
  main6 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 1#) -}
7180d04c3ed990cfe92cc275856e3751
  main7 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R))) -}
a7df1f12b0c6be4198f707906326ddc1
  newChatroom ::
    GHC.Base.String -> Main.Client -> GHC.Conc.Sync.STM Main.Chatroom
  {- Arity: 3, Strictness: <L,U><L,1*U(U,U,U,U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.newChatroom1
                  `cast`
                (<GHC.Base.String>_R
                 ->_R <Main.Client>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <Main.Chatroom>_R)) -}
a1ba51d731fdb83478daa716d2bc16d1
  newChatroom1 ::
    GHC.Base.String
    -> Main.Client
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.Chatroom #)
  {- Arity: 3, Strictness: <L,U><L,1*U(U,U,U,U(U))><S,U>,
     Unfolding: (\ (name :: GHC.Base.String)
                   (client :: Main.Client)
                   (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                        @ GHC.Prim.RealWorld
                        (case client of wild { Main.Client ds ds1 ds2 ds3 ->
                         case ds3 of ww { GHC.Types.I# ww1 ->
                         Main.$w$sgo1
                           @ Main.Client
                           ww1
                           wild
                           (Data.Map.Base.Tip @ GHC.Types.Int @ Main.Client) } })
                        s of ds { (#,#) ipv ipv1 ->
                 (# ipv,
                    Main.Chatroom
                      name
                      (Data.Hashable.Class.$fHashable[]_$s$chash name)
                      (GHC.Conc.Sync.TVar
                         @ (Data.Map.Base.Map GHC.Types.Int Main.Client)
                         ipv1) #) }) -}
89d78155cb4333cbc876015dda9e3185
  newClient ::
    GHC.Types.Int
    -> GHC.Base.String
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Types.IO Main.Client
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.newClient1
                  `cast`
                (<GHC.Types.Int>_R
                 ->_R <GHC.Base.String>_R
                 ->_R <GHC.IO.Handle.Types.Handle>_R
                 ->_R Sym (GHC.Types.N:IO[0] <Main.Client>_R)) -}
bee3f633fdadd3da9469080022524bff
  newClient1 ::
    GHC.Types.Int
    -> GHC.Base.String
    -> GHC.IO.Handle.Types.Handle
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, Main.Client #)
  {- Arity: 4, HasNoCafRefs, Strictness: <L,U><L,U><L,U><S,U>,
     Unfolding: InlineRule (4, True, False)
                (\ (num :: GHC.Types.Int)
                   (name :: GHC.Base.String)
                   (hdl :: GHC.IO.Handle.Types.Handle)
                   (eta :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case GHC.Prim.newTVar#
                        @ (Control.Concurrent.STM.TChan.TList Main.Message)
                        @ GHC.Prim.RealWorld
                        (Control.Concurrent.STM.TChan.TNil @ Main.Message)
                        eta of ds { (#,#) ipv ipv1 ->
                 let {
                   hole :: GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Main.Message)
                   = GHC.Conc.Sync.TVar
                       @ (Control.Concurrent.STM.TChan.TList Main.Message)
                       ipv1
                 } in
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Main.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv of ds1 { (#,#) ipv2 ipv3 ->
                 case GHC.Prim.newTVar#
                        @ (GHC.Conc.Sync.TVar
                             (Control.Concurrent.STM.TChan.TList Main.Message))
                        @ GHC.Prim.RealWorld
                        hole
                        ipv2 of ds2 { (#,#) ipv4 ipv5 ->
                 (# ipv4,
                    Main.Client
                      name
                      (Control.Concurrent.STM.TChan.TChan @ Main.Message ipv3 ipv5)
                      hdl
                      num #) } } }) -}
90bde88fc525d809a7535e1877d2cd44
  removeClient ::
    Main.Client
    -> GHC.Types.Int -> Main.Chatrooms -> GHC.Types.IO GHC.Types.Bool
  {- Arity: 4,
     Strictness: <L,U(A,1*U(A,U),A,U(U))><S,U(U)><S(S),1*U(U)><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.removeClient1
                  `cast`
                (<Main.Client>_R
                 ->_R <GHC.Types.Int>_R
                 ->_R <Main.Chatrooms>_R
                 ->_R Sym (GHC.Types.N:IO[0] <GHC.Types.Bool>_R)) -}
7309c9d48b74b6c75b79f90c0953c253
  removeClient1 ::
    Main.Client
    -> GHC.Types.Int
    -> Main.Chatrooms
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 4,
     Strictness: <L,U(A,1*U(A,U),A,U(U))><S,U(U)><S(S),1*U(U)><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (4, True, False)
                (\ (w :: Main.Client)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Main.Chatrooms)
                   (w3 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 case w2 of ww2 { GHC.Conc.Sync.TVar ww3 ->
                 Main.$wremoveClient w ww1 ww3 w3 } }) -}
80f989401ad798fdf08c4db4ea25d3a2
  removeClient2 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, GHC.Types.Bool #)
  {- Arity: 1, HasNoCafRefs, Strictness: <S,U>,
     Unfolding: InlineRule (1, True, False)
                (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 (# s, GHC.Types.False #)) -}
074001ba49c4a6535c8cbafd4a45f1f1
  roomName :: Main.Chatroom -> GHC.Base.String
  RecSel Left Main.Chatroom
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Chatroom) ->
                 case ds of wild { Main.Chatroom ds1 ds2 ds3 -> ds1 }) -}
a69ba7c8e157b24c626c3fcf2180295c
  roomRef :: Main.Chatroom -> GHC.Types.Int
  RecSel Left Main.Chatroom
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U(U),A)>m,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Main.Chatroom) ->
                 case ds of wild { Main.Chatroom ds1 ds2 ds3 -> ds2 }) -}
27caf134201dfe6f813b8d2d628f6a67
  runClient :: Main.Chatrooms -> Main.Client -> GHC.Types.IO ()
  {- Arity: 3, Strictness: <L,U(U)><L,U(U,U(U,U),U,U(U))><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.runClient1
                  `cast`
                (<Main.Chatrooms>_R
                 ->_R <Main.Client>_R
                 ->_R Sym (GHC.Types.N:IO[0] <()>_R)) -}
bda0682b3821f2c4e8897b9ed41ea530
  runClient1 ::
    Main.Chatrooms
    -> Main.Client
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, Strictness: <L,U(U)><L,U(U,U(U,U),U,U(U))><S,U> -}
9155e09b2a6a4b01297931483abf9529
  sendMessage :: Main.Client -> Main.Message -> GHC.Conc.Sync.STM ()
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LS(LS)LL),1*U(A,1*U(A,U),A,A)><L,U><S,U>,
     Unfolding: InlineRule (0, True, True)
                Main.sendMessage1
                  `cast`
                (<Main.Client>_R
                 ->_R <Main.Message>_R
                 ->_R Sym (GHC.Conc.Sync.N:STM[0] <()>_R)) -}
bd7468e2b190a892fa630c696a9b9f0b
  sendMessage1 ::
    Main.Client
    -> Main.Message
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LS(LS)LL),1*U(A,1*U(A,U),A,A)><L,U><S,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ (w :: Main.Client)
                   (w1 :: Main.Message)
                   (w2 :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case w of ww { Main.Client ww1 ww2 ww3 ww4 ->
                 case ww2 of ww5 { Control.Concurrent.STM.TChan.TChan ww6 ww7 ->
                 Main.$wsendMessage ww6 ww7 w1 w2 } }) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

